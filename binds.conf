# vim: set ft=tmux

# General settings
setw -g mode-keys vi          # Use vi-style key bindings in copy mode
set -g status-keys emacs      # Use emacs-style key bindings in the status line
set -g xterm-keys on          # Enable xterm-style keys

# Set new prefix (Ctrl-a)
unbind C-b                    # Unbind the default prefix (Ctrl-b)
set -g prefix C-a             # Set the new prefix to Ctrl-a
bind C-a send-prefix          # Allow sending the prefix key (Ctrl-a)

# Config reload
bind C-r source ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded"  # Reload tmux config

# Split windows
unbind '"'                    # Unbind default horizontal split
unbind '%'                    # Unbind default vertical split
bind "\\" split-window -hc "#{pane_current_path}"  # Split vertically with current pane height
bind-key "|" split-window -fh -c "#{pane_current_path}"  # Split vertically with full height
bind - split-window -vc "#{pane_current_path}"  # Split horizontally

# Close a window or pane
unbind C-Q                    # Unbind default close window
bind-key Q kill-window        # Bind Q to kill the current window
unbind Q                      # Unbind default close pane
bind-key q kill-pane          # Bind q to kill the current pane

# Copy mode and paste
unbind [                      # Unbind default copy mode
unbind ]                      # Unbind default paste buffer
bind v copy-mode              # Bind v to enter copy mode
bind -T copy-mode-vi v send -X begin-selection  # Bind v to begin selection in copy mode
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "wl-copy"  # Bind y to copy selection to clipboard
bind p paste-buffer           # Bind p to paste buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "wl-copy"  # Bind mouse drag end to copy selection

# Smart pane switching with awareness of Neovim splits
bind-key -n C-h if -F "#{@pane_is_vim}" 'send-keys C-h' 'select-pane -L'  # Smart pane switch left
bind-key -n C-j if -F "#{@pane_is_vim}" 'send-keys C-j' 'select-pane -D'  # Smart pane switch down
bind-key -n C-k if -F "#{@pane_is_vim}" 'send-keys C-k' 'select-pane -U'  # Smart pane switch up
bind-key -n C-l if -F "#{@pane_is_vim}" 'send-keys C-l' 'select-pane -R'  # Smart pane switch right

# Smart pane resizing with awareness of Neovim splits
bind-key -n M-left if -F "#{@pane_is_vim}" 'send-keys C-left' 'resize-pane -L 3'  # Smart resize left
bind-key -n M-down if -F "#{@pane_is_vim}" 'send-keys C-down' 'resize-pane -D 3'  # Smart resize down
bind-key -n M-up if -F "#{@pane_is_vim}" 'send-keys C-up' 'resize-pane -U 3'  # Smart resize up
bind-key -n M-right if -F "#{@pane_is_vim}" 'send-keys C-right' 'resize-pane -R 3'  # Smart resize right

# Tmux version-specific bindings
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane_is_vim}\" 'send-keys C-\\' 'select-pane -l'"  # Bind C-\ for tmux < 3.0
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane_is_vim}\" 'send-keys C-\\\\' 'select-pane -l'"  # Bind C-\ for tmux >= 3.0

# Copy mode navigation
bind-key -T copy-mode-vi 'C-h' select-pane -L  # Navigate left in copy mode
bind-key -T copy-mode-vi 'C-j' select-pane -D  # Navigate down in copy mode
bind-key -T copy-mode-vi 'C-k' select-pane -U  # Navigate up in copy mode
bind-key -T copy-mode-vi 'C-l' select-pane -R  # Navigate right in copy mode
bind-key -T copy-mode-vi 'C-\' select-pane -l  # Navigate last pane in copy mode

# Projects
unbind Enter                 # Unbind default Enter key
bind-key Enter popup -E -h 80% -w 80% "dev"  # Bind Enter to open a popup window for "dev"

# Navi
bind-key -T prefix C-g split-window \
  "$SHELL --login -i -c 'navi --print | head -n 1 | tmux load-buffer -b tmp - ; tmux paste-buffer -p -t {last} -b tmp -d'"  # Bind C-g to open navi in a split window
